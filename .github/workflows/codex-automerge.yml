name: Codex Auto-merge (by label, live)

on:
  pull_request:
    types: [labeled, opened, reopened, synchronize, ready_for_review, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  enable_auto_merge:
    runs-on: ubuntu-latest
    env:
      TARGET_LABEL: "label:codex:automerge"   # ← твоя метка с двоеточиями
    steps:
      - name: Resolve PR/REPO
        id: ctx
        run: |
          echo "PR=${{ github.event.pull_request.number }}" >> "$GITHUB_OUTPUT"
          echo "REPO=${{ github.repository }}" >> "$GITHUB_OUTPUT"

      - name: Check label via GitHub API (live)
        id: check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR: ${{ steps.ctx.outputs.PR }}
          REPO: ${{ steps.ctx.outputs.REPO }}
          TARGET_LABEL: ${{ env.TARGET_LABEL }}
        run: |
          set -euo pipefail
          # Получаем актуальные метки PR и проверяем точное совпадение имени
          gh pr view "$PR" --repo "$REPO" --json labels \
            | jq -e --arg L "$TARGET_LABEL" '
                [.labels[].name] | index($L) != null
              ' >/dev/null \
            && echo "has_label=true"  >> "$GITHUB_OUTPUT" \
            || echo  "has_label=false" >> "$GITHUB_OUTPUT"

      - name: Checkout repository
        if: steps.check.outputs.has_label == 'true'
        uses: actions/checkout@v4

      - name: Enable auto-merge
        if: steps.check.outputs.has_label == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR: ${{ steps.ctx.outputs.PR }}
          REPO: ${{ steps.ctx.outputs.REPO }}
        run: |
          gh pr merge "$PR" --repo "$REPO" --merge --auto
          echo "::notice::Auto-merge enabled for PR #$PR"
