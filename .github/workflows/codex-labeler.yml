# .github/workflows/codex-labeler.yml
name: Codex Labeler (v3)

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review, edited]
  issue_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

permissions:
  pull-requests: write
  contents: read

jobs:
  label_by_codex_activity:
    if: >
      github.event_name != 'issue_comment' ||
      (github.event_name == 'issue_comment' && github.event.issue.pull_request)
    runs-on: ubuntu-latest
    steps:
      - name: Collect context
        id: ctx
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "PR=${{ github.event.pull_request.number }}" >> "$GITHUB_OUTPUT"
            echo "ACTOR=${{ github.event.pull_request.user.login }}" >> "$GITHUB_OUTPUT"
            echo "TITLE=${{ github.event.pull_request.title }}" >> "$GITHUB_OUTPUT"
            echo "BODY<<EOF" >> "$GITHUB_OUTPUT"
            echo "${{ github.event.pull_request.body }}" >> "$GITHUB_OUTPUT"
            echo "EOF" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.event_name }}" = "issue_comment" ]; then
            echo "PR=${{ github.event.issue.number }}" >> "$GITHUB_OUTPUT"
            echo "ACTOR=${{ github.event.comment.user.login }}" >> "$GITHUB_OUTPUT"
            echo "TITLE=" >> "$GITHUB_OUTPUT"
            echo "BODY<<EOF" >> "$GITHUB_OUTPUT"
            echo "${{ github.event.comment.body }}" >> "$GITHUB_OUTPUT"
            echo "EOF" >> "$GITHUB_OUTPUT"
          else
            echo "PR=${{ github.event.pull_request.number }}" >> "$GITHUB_OUTPUT"
            echo "ACTOR=${{ github.event.review.user.login }}" >> "$GITHUB_OUTPUT"
            echo "TITLE=" >> "$GITHUB_OUTPUT"
            echo "BODY<<EOF" >> "$GITHUB_OUTPUT"
            echo "${{ github.event.review.body }}" >> "$GITHUB_OUTPUT"
            echo "EOF" >> "$GITHUB_OUTPUT"
          fi

      - name: Decide if this is Codex activity
        id: guard
        env:
          ACTOR: ${{ steps.ctx.outputs.ACTOR }}
          TITLE: ${{ steps.ctx.outputs.TITLE }}
          BODY: ${{ steps.ctx.outputs.BODY }}
          # добавь из скрина:
          ALLOWED_AUTHORS: '["chatgpt-codex-connector[bot]","openai-codex[bot]","openai[bot]"]'
          # временная эвристика (пока не уверен в логине)
          MARKERS: "Codex Review|@codex|Suggested by Codex|Generated by Codex|OpenAI Codex|Codex"
        run: |
          set -euo pipefail
          if echo "$ALLOWED_AUTHORS" | jq -e --arg a "$ACTOR" 'index($a) != null' >/dev/null; then
            echo "ok=1" >> "$GITHUB_OUTPUT"; exit 0; fi
          if printf '%s\n%s' "$TITLE" "$BODY" | grep -Eiq "$MARKERS"; then
            echo "ok=1" >> "$GITHUB_OUTPUT"; else echo "ok=" >> "$GITHUB_OUTPUT"; fi

      - name: Add label codex:automerge
        if: steps.guard.outputs.ok == '1'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          PR: ${{ steps.ctx.outputs.PR }}
        run: |
          gh pr edit "$PR" --repo "$REPO" --add-label "codex:automerge"
