openapi: 3.1.0
info:
  title: PhotoChanger Platform API
  version: 0.1.0
  description: |
    Контракт REST API платформы PhotoChanger, включающий ingest-эндпоинт для DSLR Remote Pro
    и внутренние операции для UI управления слотами, медиа и статистикой. Основан на утверждённых
    продуктовых требованиях. Все защищённые эндпоинты используют JWT-аутентификацию и проверку прав.
servers:
  - url: https://api.photochanger.local
    description: Базовый URL платформы
security:
  - bearerAuth: []
tags:
  - name: Auth
    description: Аутентификация и управление сессиями
  - name: Providers
    description: Справочник AI-провайдеров
  - name: Slots
    description: Управление статическими ingest-слотами
  - name: Media
    description: Временное и шаблонное медиа-хранилище
  - name: Settings
    description: Глобальные настройки платформы и управление секретами
  - name: Stats
    description: Метрики и отчёты по слотам
  - name: Jobs
    description: Управление очередью задач обработки и их мониторинг
  - name: Ingest
    description: Внешний ingest-эндпоинт для DSLR Remote Pro
  - name: Public
    description: Публичная раздача временных медиа-ссылок
paths:
  /api/login:
    post:
      security: []
      tags: [Auth]
      summary: Вход пользователя и выдача JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./schemas/LoginRequest.json
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: ./schemas/LoginResponse.json
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /api/providers:
    get:
      tags: [Providers]
      summary: Получить короткий справочник провайдеров
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список провайдеров
          content:
            application/json:
              schema:
                $ref: ./schemas/ProviderList.json
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/slots:
    get:
      tags: [Slots]
      summary: Получить список статических ingest-слотов
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: provider_id
          schema:
            type: string
          description: Фильтр по провайдеру
        - in: query
          name: operation_id
          schema:
            type: string
          description: Фильтр по операции провайдера
        - in: query
          name: search
          schema:
            type: string
          description: Поиск по имени слота
      responses:
        '200':
          description: Коллекция слотов
          content:
            application/json:
              schema:
                $ref: ./schemas/SlotListResponse.json
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/slots/{slot_id}:
    get:
      tags: [Slots]
      summary: Получить данные конкретного слота
      description: >-
        Возвращает полную конфигурацию слота вместе с массивом `recent_results`, содержащим
        последние успешные задачи с публичными ссылками на скачивание итоговых изображений.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SlotId'
      responses:
        '200':
          description: Данные слота и список последних результатов
          content:
            application/json:
              schema:
                $ref: ./schemas/Slot.json
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
    put:
      tags: [Slots]
      summary: Обновить настройки слота
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SlotId'
        - $ref: '#/components/parameters/SlotVersionIfMatch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./schemas/SlotUpdateRequest.json
      responses:
        '200':
          description: Настройки обновлены
          content:
            application/json:
              schema:
                $ref: ./schemas/SlotUpdateResponse.json
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/slots/{slot_id}/reset_stats:
    post:
      tags: [Slots]
      summary: Сбросить статистику слота
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SlotId'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              description: Пустой объект для совместимости
      responses:
        '204':
          description: Статистика сброшена
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/settings:
    get:
      tags: [Settings]
      summary: Получить глобальные настройки платформы
      description: Требует право `settings:read`. Возвращает статус секретов, настройки таймаута ingest и связанные TTL медиахранилища
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Текущие настройки платформы
          content:
            application/json:
              schema:
                $ref: ./schemas/SettingsResponse.json
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
    put:
      tags: [Settings]
      summary: Обновить глобальные настройки и секреты
      description: >-
        Требует право `settings:write`. Обновляет только переданные поля и возвращает актуальные значения, включая новое значение `T_sync_response`.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./schemas/SettingsUpdateRequest.json
      responses:
        '200':
          description: Настройки обновлены
          content:
            application/json:
              schema:
                $ref: ./schemas/SettingsResponse.json
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/media/cache/purge:
    post:
      tags: [Settings]
      summary: Поставить задачу очистки медиа-кеша
      description: Требует право `settings:write`. Планирует асинхронное удаление устаревших Result и media_object
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: ./schemas/MediaCachePurgeRequest.json
      responses:
        '202':
          description: Очистка поставлена в очередь
          content:
            application/json:
              schema:
                $ref: ./schemas/MediaCachePurgeResponse.json
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/jobs:
    get:
      tags: [Jobs]
      summary: Получить список задач ingest-очереди
      description: >-
        Возвращает административный список задач с агрегированными метриками ожидания и дедлайнами,
        вычисленными напрямую из `job.expires_at`. Требует право `stats:read`.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [pending, processing]
          description: Фильтр по текущему промежуточному статусу задачи.
        - in: query
          name: is_finalized
          schema:
            type: boolean
          description: Ограничить выборку финализированными (`true`) или активными (`false`) задачами.
        - in: query
          name: failure_reason
          schema:
            type: string
            enum: [timeout, provider_error, cancelled]
          description: Показать только задачи с указанной причиной неуспеха.
        - in: query
          name: slot_id
          schema:
            $ref: '#/components/schemas/SlotId'
          description: Фильтр по идентификатору слота (`slot-001` … `slot-015`).
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Номер страницы постраничного просмотра.
        - in: query
          name: page_size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Количество записей на страницу.
        - in: query
          name: sort_by
          schema:
            type: string
            enum: [created_at, expires_at]
            default: expires_at
          description: Поле сортировки списка задач.
        - in: query
          name: sort_order
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Направление сортировки.
      responses:
        '200':
          description: Список задач с дедлайнами и временными метриками
          content:
            application/json:
              schema:
                $ref: ./schemas/JobListResponse.json
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/jobs/{job_id}:
    get:
      tags: [Jobs]
      summary: Получить подробную информацию о задаче
      description: >-
        Возвращает полную запись задачи, её дедлайн `expires_at` и рассчитанные метрики
        оставшегося времени. Требует право `stats:read`.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/JobId'
      responses:
        '200':
          description: Подробная информация о задаче
          content:
            application/json:
              schema:
                $ref: ./schemas/JobDetailResponse.json
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/media/register:
    post:
      tags: [Media]
      summary: Зарегистрировать временное медиа и получить публичную ссылку
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: ./schemas/MediaRegisterRequest.json
      responses:
        '201':
          description: Временный файл зарегистрирован
          content:
            application/json:
              schema:
                $ref: ./schemas/MediaObject.json
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /api/template-media/register:
    post:
      tags: [Media]
      summary: Загрузить шаблон и привязать его к слоту
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: ./schemas/TemplateMediaRegisterRequest.json
      responses:
        '201':
          description: Шаблон зарегистрирован и привязан
          content:
            application/json:
              schema:
                $ref: ./schemas/TemplateMediaObject.json
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/template-media/{id}:
    delete:
      tags: [Media]
      summary: Удалить шаблонное медиа и отвязать от слота
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор шаблонного медиа
          schema:
            type: string
            format: uuid
        - name: slot_id
          in: query
          required: true
          description: Слот, из которого удаляется привязка
          schema:
            $ref: '#/components/schemas/SlotId'
        - name: setting_key
          in: query
          required: true
          description: Ключ настройки, который ссылался на шаблон
          schema:
            type: string
        - name: force
          in: query
          required: false
          description: Удалить файл даже при нескольких привязках
          schema:
            type: boolean
      responses:
        '204':
          description: Шаблон удалён или отвязан
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /public/media/{id}:
    get:
      security: []
      tags: [Public]
      summary: Получить временный файл по публичной ссылке
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
          description: Идентификатор media_object
      responses:
        '200':
          description: Бинарное содержимое изображения
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /public/results/{job_id}:
    get:
      security: []
      tags: [Public]
      summary: Скачать итоговый файл обработки
      description: >-
        Публичная ссылка на итоговое изображение Job. Доступна 72 часа (`T_result_retention`) после
        финализации. После истечения срока возвращает `410 Gone`.
      parameters:
        - in: path
          name: job_id
          required: true
          schema:
            type: string
            format: uuid
          description: Идентификатор Job с успешным результатом.
      responses:
        '200':
          description: Итоговое изображение обработки (кнопка «Скачать» в UI)
          headers:
            Content-Disposition:
              schema:
                type: string
              description: "attachment; filename=..."
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /api/stats/{slot_id}:
    get:
      tags: [Stats]
      summary: Получить статистику по слоту
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SlotId'
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          description: Начало диапазона (UTC). Максимальная длительность — 31 день.
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          description: Конец диапазона (UTC)
        - in: query
          name: group_by
          schema:
            type: string
            enum: [hour, day, week]
            default: day
          description: Гранулярность агрегации
      responses:
        '200':
          description: Детальная статистика по слоту
          content:
            application/json:
              schema:
                $ref: ./schemas/SlotStatsResponse.json
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/stats/global:
    get:
      tags: [Stats]
      summary: Получить агрегированную статистику по слотам
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          description: Начало диапазона (UTC). Максимум 90 дней.
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          description: Конец диапазона (UTC)
        - in: query
          name: group_by
          schema:
            type: string
            enum: [day, week, month]
            default: week
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
        - in: query
          name: page_size
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - in: query
          name: sort_by
          schema:
            type: string
            enum: [period_start, success, errors, ingest_count]
            default: period_start
        - in: query
          name: sort_order
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - in: query
          name: provider_id
          schema:
            type: string
          description: Фильтр по провайдеру
        - in: query
          name: slot_id
          schema:
            $ref: '#/components/schemas/SlotId'
          description: Фильтр по конкретному слоту
      responses:
        '200':
          description: Агрегированная статистика
          content:
            application/json:
              schema:
                $ref: ./schemas/GlobalStatsResponse.json
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
  /ingest/{slotId}:
    post:
      tags: [Ingest]
      summary: Принять ingest-запрос от DSLR Remote Pro
      description: >-
        Эндпоинт принимает multipart/form-data с исходной фотографией и глобальным паролем.
        Дополнительные текстовые поля не валидируются и сохраняются как метаданные. Ограничение
        ожидания ответа определяется `T_sync_response` (настраивается администратором в диапазоне 45–60 секунд);
        Ingest API удерживает соединение и раз в секунду читает запись `Job` из БД, ожидая финализации без
        дополнительных уведомлений. По истечении окна клиент получает 504, задача немедленно завершается и дальнейший
        polling провайдера по `provider_job_reference` не выполняется.
      security: []
      parameters:
        - in: path
          name: slotId
          required: true
          schema:
            $ref: '#/components/schemas/SlotId'
          description: Статический идентификатор ingest-слота (`slot-001` … `slot-015`).
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: ./schemas/IngestRequest.json
      responses:
        '200':
          description: Успешная обработка изображения
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/heic:
              schema:
                type: string
                format: binary
            image/heif:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SlotId:
      type: string
      enum:
        - slot-001
        - slot-002
        - slot-003
        - slot-004
        - slot-005
        - slot-006
        - slot-007
        - slot-008
        - slot-009
        - slot-010
        - slot-011
        - slot-012
        - slot-013
        - slot-014
        - slot-015
      description: Допустимый статический идентификатор ingest-слота.
  parameters:
    SlotId:
      name: slot_id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SlotId'
      description: Идентификатор статического слота (`slot-001` … `slot-015`)
    SlotVersionIfMatch:
      name: If-Match
      in: header
      required: false
      schema:
        type: string
      description: >-
        Текущая версия слота в формате ETag. Обязателен, если метка версии не
        передана в поле `updated_at` тела запроса.
  responses:
    BadRequest:
      description: Некорректный запрос
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    Unauthorized:
      description: Ошибка аутентификации
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    Forbidden:
      description: Недостаточно прав
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    Conflict:
      description: Конфликт состояния
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    UnprocessableEntity:
      description: Ошибка бизнес-валидации
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    TooManyRequests:
      description: Превышен лимит запросов
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    PayloadTooLarge:
      description: Размер файла превышает лимит
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    UnsupportedMediaType:
      description: MIME не поддерживается
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    InternalError:
      description: Внутренняя ошибка сервиса
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    ServiceUnavailable:
      description: Временная недоступность сервиса
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    GatewayTimeout:
      description: Истекло окно ожидания синхронного ответа; Job финализирована с `failure_reason = 'timeout'`, polling провайдера остановлен, повторный запуск требует нового ingest-запроса
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
    Gone:
      description: Ссылка истекла
      content:
        application/json:
          schema:
            $ref: ./schemas/Error.json
